var documenterSearchIndex = {"docs":
[{"location":"index.html#IonBase","page":"Home","title":"IonBase","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Foundation of IonCLI.","category":"page"},{"location":"index.html#References","page":"Home","title":"References","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Modules = [IonBase, IonBase.Registry, IonBase.Doc]","category":"page"},{"location":"index.html#IonBase.PRN","page":"Home","title":"IonBase.PRN","text":"PRN{name}\n\nPackage Registry Name\n\n\n\n\n\n","category":"type"},{"location":"index.html#IonBase.PRN-Tuple{String}","page":"Home","title":"IonBase.PRN","text":"PRN(name::String)\n\nCreate a PRN (Pacakge Registry Name) object.\n\n\n\n\n\n","category":"method"},{"location":"index.html#IonBase.add","page":"Home","title":"IonBase.add","text":"add package/project to the closest project.\n\nArguments\n\nurls: package names or urls to add.\n\nFlags\n\n-g, --glob: add package to global shared environment.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.build","page":"Home","title":"IonBase.build","text":"build package/project/environment\n\nArguments\n\npkg: package name.\n\nFlags\n\n-v, --verbose: print verbose log\n-g, --glob: enable to build in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.clone","page":"Home","title":"IonBase.clone","text":"clone a package or url and setup the local repo. If the current local git user do not have push access to remote github repo, it will fork this repo then clone the repo and set the input url as upstream.\n\nArguments\n\nurl_or_package: name of the package or url.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.create","page":"Home","title":"IonBase.create","text":"create a project or package.\n\nArguments\n\npath: path of the project you want to create\n\nOptions\n\n--user <name>: your GitHub user name for this package.\n--template <template name>: template name.\n\nFlags\n\n-i, --interactive: enable to start interactive configuration interface.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.dev","page":"Home","title":"IonBase.dev","text":"Make a package available for development. If pkg is an existing local path, that path will be recorded in the manifest and used. Otherwise, a full git clone of pkg is made. Unlike the dev/develop command in Julia REPL pkg mode, ion will clone the package to the dev folder of the current project. You can specify --shared flag to use shared dev folder under ~/.julia/dev (specified by JULIA_PKG_DEVDIR).\n\nArguments\n\nurl: URL or local path to the package.\n\nFlags\n\n-s, --shared: controls whether to use the shared develop folder.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.free","page":"Home","title":"IonBase.free","text":"If pkg is pinned, remove the pin. If pkg is tracking a path, e.g. after Pkg.develop, go back to tracking registered versions.\n\nFlags\n\n-g, --glob: enable to execute in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.install","page":"Home","title":"IonBase.install","text":"install a given target. Currently only supports \"path\", future will support installing a specific Julia version and Comonicon applications.\n\nArguments\n\ntarget: install given target, can be \"path\".\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.instantiate","page":"Home","title":"IonBase.instantiate","text":"If a Manifest.toml file exists in the active project, download all the packages declared in that manifest. Otherwise, resolve a set of feasible packages from the Project.toml files and install them. If no Project.toml exist in the current active project, create one with all the dependencies in the manifest and instantiate the resulting project.\n\nFlags\n\n-v, --verbose: prints the build output to stdout/stderr instead of redirecting to the build.log file.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.isurl-Tuple{AbstractString}","page":"Home","title":"IonBase.isurl","text":"isurl(str)\n\nChecks if the given string is an absolute URL.\n\nExamples\n\njulia> isurl(\"https://julialang.org\")\ntrue\njulia> isurl(\"mailto:someone@example.com\")\ntrue\njulia> isurl(\"/foo/bar\")\nfalse\n\n\n\n\n\n","category":"method"},{"location":"index.html#IonBase.redo","page":"Home","title":"IonBase.redo","text":"Redoes the changes from the latest undo.\n\nFlags\n\n-g, --glob: enable to execute in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.release","page":"Home","title":"IonBase.release","text":"release a package.\n\nArguments\n\nversion: version number you want to release. Can be a specific version, \"current\" or either of (major, minor, patch)\npath: path to the project you want to release.\n\nOptions\n\n-r,--registry <registry name>: registry you want to register the package.   If the package has not been registered, ion will try to register   the package in the General registry. Or the user needs to specify   the registry to register using this option.\n-b, --branch <branch name>: branch you want to register.\n\nFlags\n\n-q,--quiet: do not promote anything.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.resolve","page":"Home","title":"IonBase.resolve","text":"Update the current manifest. It will update manifest with potential changes to the dependency graph from packages that are tracking a path.\n\nFlags\n\n-g, --glob: enable to resolve in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.rm","page":"Home","title":"IonBase.rm","text":"Remove a package from the current project. If the mode of pkg is PKGMODE_MANIFEST also remove it from the manifest including all recursive dependencies of pkg.\n\nArguments\n\npkg: package name to remove.\n\nFlags\n\n-g, --glob: enable to remove package in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.search","page":"Home","title":"IonBase.search","text":"search a package.\n\nOptions\n\n--registry <name>: the name of registry you want to search, by default will search all registry in default DEPOT_PATH\n--token <github_token>: specify GitHub authenticate token, this is necessary when you want to search frequently.\n\nFlags\n\n--omit: use this flag to print only the package names.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.status","page":"Home","title":"IonBase.status","text":"show current environment status\n\nArguments\n\npkg: package name.\n\nFlags\n\n-d, --diff: show diff to last git commit\n-g, --glob: enable to show status in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.test","page":"Home","title":"IonBase.test","text":"test package/project\n\nArguments\n\npkg: package name.\n\nFlags\n\n-g, --glob: enable to test in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.undo","page":"Home","title":"IonBase.undo","text":"Undoes the latest change to the active project. Only states in the current session are stored, up to a maximum of 50 states.\n\nFlags\n\n-g, --glob: enable to execute in global shared environment\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.update","page":"Home","title":"IonBase.update","text":"Update a package. If no posistional argument is given, update all packages in current project.\n\nArguments\n\npkg: package name.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.Registry","page":"Home","title":"IonBase.Registry","text":"registry tools\n\n\n\n\n\n","category":"module"},{"location":"index.html#IonBase.Registry.add","page":"Home","title":"IonBase.Registry.add","text":"add a registry\n\nArguments\n\nurl: URL to the registry, or use name \"General\" to add the default general registry.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.Doc","page":"Home","title":"IonBase.Doc","text":"documentation tools.\n\n\n\n\n\n","category":"module"},{"location":"index.html#IonBase.Doc.build","page":"Home","title":"IonBase.Doc.build","text":"build documentation.\n\nArgs\n\npath: path of the project.\n\n\n\n\n\n","category":"function"},{"location":"index.html#IonBase.Doc.serve","page":"Home","title":"IonBase.Doc.serve","text":"serve documentation.\n\nOptions\n\n--foldername <name>: specify the name of the content folder if different than \"docs\".\n--literate <path>: is the path to the folder containing the literate scripts, if    left empty, it will be assumed that they are in docs/src.\n\nFlags\n\n--verbose: show verbose log.\n--doc-env: is a boolean switch to make the server start by activating the    doc environment or not (i.e. the Project.toml in docs/).\n\n\n\n\n\n","category":"function"}]
}
